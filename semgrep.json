{"errors": [], "interfile_languages_used": ["Java", "JavaScript"], "paths": {"scanned": ["../../vulnado/.gitignore", "../../vulnado/.gitlab-ci.yml", "../../vulnado/.mvn/wrapper/maven-wrapper.jar", "../../vulnado/.mvn/wrapper/maven-wrapper.properties", "../../vulnado/Dockerfile", "../../vulnado/LICENSE", "../../vulnado/README.md", "../../vulnado/client/Dockerfile", "../../vulnado/client/css/main.css", "../../vulnado/client/images/doggo.jpg", "../../vulnado/client/images/signout-hover.png", "../../vulnado/client/images/signout.png", "../../vulnado/client/images/trash.png", "../../vulnado/client/index.html", "../../vulnado/client/js/index.js", "../../vulnado/client/js/login.js", "../../vulnado/client/login.html", "../../vulnado/docker-compose.yml", "../../vulnado/exercises/01-sql-injection.md", "../../vulnado/exercises/02-xss.md", "../../vulnado/exercises/03-ssrf.md", "../../vulnado/exercises/04-rce-reverse-shell.md", "../../vulnado/exercises/assets/arch.png", "../../vulnado/exercises/assets/arch.xml", "../../vulnado/exercises/assets/reverse_shell.png", "../../vulnado/exercises/assets/reverse_shell.xml", "../../vulnado/internal_site/Dockerfile", "../../vulnado/internal_site/index.html", "../../vulnado/mvnw", "../../vulnado/mvnw.cmd", "../../vulnado/pom.xml", "../../vulnado/reverse_shell/README.md", "../../vulnado/reverse_shell/main.tf", "../../vulnado/reverse_shell/tf", "../../vulnado/reverse_shell/variables.tf", "../../vulnado/src/main/java/com/scalesec/vulnado/Comment.java", "../../vulnado/src/main/java/com/scalesec/vulnado/CommentsController.java", "../../vulnado/src/main/java/com/scalesec/vulnado/CowController.java", "../../vulnado/src/main/java/com/scalesec/vulnado/Cowsay.java", "../../vulnado/src/main/java/com/scalesec/vulnado/LinkLister.java", "../../vulnado/src/main/java/com/scalesec/vulnado/LinksController.java", "../../vulnado/src/main/java/com/scalesec/vulnado/LoginController.java", "../../vulnado/src/main/java/com/scalesec/vulnado/Postgres.java", "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "../../vulnado/src/main/java/com/scalesec/vulnado/VulnadoApplication.java", "../../vulnado/src/main/resources/application.properties"]}, "results": [{"check_id": "dockerfile.security.missing-user.missing-user", "end": {"col": 31, "line": 8, "offset": 195}, "extra": {"engine_kind": "PRO", "fingerprint": "0d7fb036ac29619e5bc2ebeec79c74fd8a2ee2a54a303d73451443e5320896746809fa601c8b2e5712e6be7cb2562f6a6d207e9d7fb02de19ed42c1aef905543_0", "fix": "USER non-root\nCMD [\"mvn\", \"spring-boot:run\"]", "is_ignored": false, "lines": "CMD [\"mvn\", \"spring-boot:run\"]", "message": "By not specifying a USER, a program in the container may run as 'root'. This is a security hazard. If an attacker can control a process running as root, they may have control over the container. Ensure that the last USER in a Dockerfile is a USER other than 'root'.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-269: Improper Privilege Management"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A04:2021 - Insecure Design"], "references": ["https://owasp.org/Top10/A04_2021-Insecure_Design"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 20148, "rule_id": "AbUN06", "rv_id": 928286, "url": "https://semgrep.dev/playground/r/0bTpAQq/dockerfile.security.missing-user.missing-user", "version_id": "0bTpAQq"}}, "shortlink": "https://sg.run/Gbvn", "source": "https://semgrep.dev/r/dockerfile.security.missing-user.missing-user", "subcategory": ["audit"], "technology": ["dockerfile"], "vulnerability_class": ["Improper Authorization"]}, "metavars": {"$...VARS": {"abstract_content": "[\"mvn\"\"spring-boot:run\"]", "end": {"col": 31, "line": 8, "offset": 195}, "start": {"col": 5, "line": 8, "offset": 169}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/Dockerfile", "start": {"col": 1, "line": 8, "offset": 165}}, {"check_id": "html.security.audit.missing-integrity.missing-integrity", "end": {"col": 72, "line": 57, "offset": 2041}, "extra": {"engine_kind": "PRO", "fingerprint": "76db419b7ed4e50339315a2b3a32b48ef471496413223bcb6a8d9332e25fd056e588d2e11bf445b62e183c7a0ddce07f2fd35843011442c58ebb21f8dee4a2da_0", "is_ignored": false, "lines": "    <script src=\"https://code.jquery.com/jquery-3.2.1.min.js\"></script>", "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-353: Missing Support for Integrity Check"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13728, "rule_id": "AbUQzj", "rv_id": 833890, "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity", "version_id": "nWTy4vO"}}, "shortlink": "https://sg.run/krXA", "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity", "subcategory": ["audit"], "technology": ["html"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$...A": {"abstract_content": " src=\"https://code.jquery.com/jquery-3.2.1.min.js\"", "end": {"col": 62, "line": 57, "offset": 2031}, "start": {"col": 12, "line": 57, "offset": 1981}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/client/index.html", "start": {"col": 5, "line": 57, "offset": 1974}}, {"check_id": "html.security.audit.missing-integrity.missing-integrity", "end": {"col": 101, "line": 60, "offset": 2556}, "extra": {"engine_kind": "PRO", "fingerprint": "4e11673c99210976b281215b96968a6902479526692b0deabb6f9ac9c3bb1439a07f82a8b38c12d0f0922f4407e19bee0a873b4fba684f72d61ed834d4962efe_0", "is_ignored": false, "lines": "    <script src=\"http://builds.handlebarsjs.com.s3.amazonaws.com/handlebars.min-v4.1.0.js\"></script>", "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-353: Missing Support for Integrity Check"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13728, "rule_id": "AbUQzj", "rv_id": 833890, "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity", "version_id": "nWTy4vO"}}, "shortlink": "https://sg.run/krXA", "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity", "subcategory": ["audit"], "technology": ["html"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$...A": {"abstract_content": " src=\"http://builds.handlebarsjs.com.s3.amazonaws.com/handlebars.min-v4.1.0.js\"", "end": {"col": 91, "line": 60, "offset": 2546}, "start": {"col": 12, "line": 60, "offset": 2467}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/client/index.html", "start": {"col": 5, "line": 60, "offset": 2460}}, {"check_id": "javascript.express.security.audit.xss.mustache.explicit-unescape.template-explicit-unescape", "end": {"col": 46, "line": 73, "offset": 3130}, "extra": {"engine_kind": "PRO", "fingerprint": "43258a485b32661ffe30871f0449feacd5a0d64cdbb44d5aa59fa35a99ad15d523d093702c435d91a580c37b072f7261535ff1a2079060d552f21345b14c3970_0", "is_ignored": false, "lines": "              <p class=\"card-text\">{{{body}}}</p>", "message": "Detected an explicit unescape in a Mustache template, using triple braces '{{{...}}}' or ampersand '&'. If external data can reach these locations, your application is exposed to a cross-site scripting (XSS) vulnerability. If you must do this, ensure no external data can reach this location.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://github.com/janl/mustache.js/#variables", "https://ractive.js.org/v0.x/0.7/mustaches#variables"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9283, "rule_id": "ReUgG1", "rv_id": 834087, "url": "https://semgrep.dev/playground/r/O9TJWxA/javascript.express.security.audit.xss.mustache.explicit-unescape.template-explicit-unescape", "version_id": "O9TJWxA"}}, "shortlink": "https://sg.run/Lwx9", "source": "https://semgrep.dev/r/javascript.express.security.audit.xss.mustache.explicit-unescape.template-explicit-unescape", "subcategory": ["audit"], "technology": ["express"], "vulnerability_class": ["Cross-Site-Scripting (XSS)"]}, "metavars": {"$1": {"abstract_content": "y", "end": {"col": 43, "line": 73, "offset": 3127}, "start": {"col": 42, "line": 73, "offset": 3126}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/client/index.html", "start": {"col": 36, "line": 73, "offset": 3120}}, {"check_id": "html.security.audit.missing-integrity.missing-integrity", "end": {"col": 70, "line": 40, "offset": 1791}, "extra": {"engine_kind": "PRO", "fingerprint": "ae215b055ca9b5ada26eb7eb050c0ba5d246f3a80db5416f0582f75f340d88946003658b7c94824f5c8deede4117ac31996b4e5a749c0e0f555f790f93ae9bca_0", "is_ignored": false, "lines": "  <script src=\"https://code.jquery.com/jquery-3.2.1.min.js\"></script>", "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-353: Missing Support for Integrity Check"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13728, "rule_id": "AbUQzj", "rv_id": 833890, "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity", "version_id": "nWTy4vO"}}, "shortlink": "https://sg.run/krXA", "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity", "subcategory": ["audit"], "technology": ["html"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$...A": {"abstract_content": " src=\"https://code.jquery.com/jquery-3.2.1.min.js\"", "end": {"col": 60, "line": 40, "offset": 1781}, "start": {"col": 10, "line": 40, "offset": 1731}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/client/login.html", "start": {"col": 3, "line": 40, "offset": 1724}}, {"check_id": "html.security.audit.missing-integrity.missing-integrity", "end": {"col": 99, "line": 43, "offset": 2300}, "extra": {"engine_kind": "PRO", "fingerprint": "7b09ec48d79a2f224b2f29eb6cae23d2ea6cd8e086cce2a758746ab28ae0ad59294a645bec501438427186254b5b615a6c3ec4b18822d43acd0ff0b442a74e0e_0", "is_ignored": false, "lines": "  <script src=\"http://builds.handlebarsjs.com.s3.amazonaws.com/handlebars.min-v4.1.0.js\"></script>", "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you\u2019re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-353: Missing Support for Integrity Check"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 13728, "rule_id": "AbUQzj", "rv_id": 833890, "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity", "version_id": "nWTy4vO"}}, "shortlink": "https://sg.run/krXA", "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity", "subcategory": ["audit"], "technology": ["html"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {"$...A": {"abstract_content": " src=\"http://builds.handlebarsjs.com.s3.amazonaws.com/handlebars.min-v4.1.0.js\"", "end": {"col": 89, "line": 43, "offset": 2290}, "start": {"col": 10, "line": 43, "offset": 2211}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/client/login.html", "start": {"col": 3, "line": 43, "offset": 2204}}, {"check_id": "yaml.docker-compose.security.no-new-privileges.no-new-privileges", "end": {"col": 5, "line": 23, "offset": 328}, "extra": {"engine_kind": "PRO", "fingerprint": "ffcbc98ffba0f827a6119510f00d117cc178f20cb6239492c03f18184e80bbe6d7842ae392be1c6d2deb4597ab16bcf994e94b96029a265d24606e91701e6626_0", "is_ignored": false, "lines": "  db:", "message": "Service 'db' allows for privilege escalation via setuid or setgid binaries. Add 'no-new-privileges:true' in 'security_opt' to prevent this.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-732: Incorrect Permission Assignment for Critical Resource"], "cwe2021-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://raesene.github.io/blog/2019/06/01/docker-capabilities-and-no-new-privs/", "https://www.kernel.org/doc/Documentation/prctl/no_new_privs.txt", "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-4-add-no-new-privileges-flag"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 10054, "rule_id": "qNUoWr", "rv_id": 835301, "url": "https://semgrep.dev/playground/r/vdTOQ35/yaml.docker-compose.security.no-new-privileges.no-new-privileges", "version_id": "vdTOQ35"}}, "shortlink": "https://sg.run/0n8q", "source": "https://semgrep.dev/r/yaml.docker-compose.security.no-new-privileges.no-new-privileges", "subcategory": ["audit"], "technology": ["docker-compose"], "vulnerability_class": ["Improper Authorization"]}, "metavars": {"$SERVICE": {"abstract_content": "db", "end": {"col": 5, "line": 23, "offset": 328}, "start": {"col": 3, "line": 23, "offset": 326}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/docker-compose.yml", "start": {"col": 3, "line": 23, "offset": 326}}, {"check_id": "yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "end": {"col": 5, "line": 23, "offset": 328}, "extra": {"engine_kind": "PRO", "fingerprint": "284e3264800f0151b10dd1beab99a1d3c8a65bec3ab87a452051ef6f20b1be2d0c38f838a70ebbe63af70b40a9f45d7e2971b3879dc7c1f1f1042d773f161998_0", "is_ignored": false, "lines": "  db:", "message": "Service 'db' is running with a writable root filesystem. This may allow malicious applications to download and run additional payloads, or modify container files. If an application inside a container has to save something temporarily consider using a tmpfs. Add 'read_only: true' to this service to prevent this.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-732: Incorrect Permission Assignment for Critical Resource"], "cwe2021-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://docs.docker.com/compose/compose-file/compose-file-v3/#domainname-hostname-ipc-mac_address-privileged-read_only-shm_size-stdin_open-tty-user-working_dir", "https://blog.atomist.com/security-of-docker-kubernetes/", "https://cheatsheetseries.owasp.org/cheatsheets/Docker_Security_Cheat_Sheet.html#rule-8-set-filesystem-and-volumes-to-read-only"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 10132, "rule_id": "v8U5vN", "rv_id": 835305, "url": "https://semgrep.dev/playground/r/ExTrWYr/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "version_id": "ExTrWYr"}}, "shortlink": "https://sg.run/e4JE", "source": "https://semgrep.dev/r/yaml.docker-compose.security.writable-filesystem-service.writable-filesystem-service", "subcategory": ["audit"], "technology": ["docker-compose"], "vulnerability_class": ["Improper Authorization"]}, "metavars": {"$SERVICE": {"abstract_content": "db", "end": {"col": 5, "line": 23, "offset": 328}, "start": {"col": 3, "line": 23, "offset": 326}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/docker-compose.yml", "start": {"col": 3, "line": 23, "offset": 326}}, {"check_id": "generic.secrets.security.detected-jwt-token.detected-jwt-token", "end": {"col": 53, "line": 65, "offset": 3086}, "extra": {"engine_kind": "PRO", "fingerprint": "2f1e6c5783ad2d7bea0ce810ee2811d510e872ddc4852032d1387a0ea784d8c0efe1d145384ae2f93409da2353bb8f323962627fb412d558513afb1b6754cf64_0", "is_ignored": false, "lines": "  OPTIONS /eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyaWNrIn0.lLdv2SY2TWzzXVKSahFDWPLcUHwpXpjsLnhwo0ioRFM HTTP/1.1", "message": "JWT token detected", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-321: Use of Hard-coded Cryptographic Key"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A02:2021 - Cryptographic Failures"], "references": ["https://semgrep.dev/blog/2020/hardcoded-secrets-unverified-tokens-and-other-common-jwt-mistakes/"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 12854, "rule_id": "kxU8E8", "rv_id": 833777, "url": "https://semgrep.dev/playground/r/yeTN18Q/generic.secrets.security.detected-jwt-token.detected-jwt-token", "version_id": "yeTN18Q"}}, "shortlink": "https://sg.run/05N5", "source": "https://semgrep.dev/r/generic.secrets.security.detected-jwt-token.detected-jwt-token", "source-rule-url": "https://github.com/Yelp/detect-secrets/blob/master/detect_secrets/plugins/jwt.py", "subcategory": ["audit"], "technology": ["secrets", "jwt"], "vulnerability_class": ["Cryptographic Issues"]}, "metavars": {}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/exercises/02-xss.md", "start": {"col": 12, "line": 65, "offset": 3045}}, {"check_id": "terraform.aws.security.aws-subnet-has-public-ip-address.aws-subnet-has-public-ip-address", "end": {"col": 2, "line": 41, "offset": 745}, "extra": {"engine_kind": "PRO", "fingerprint": "b8d0ad08f23fa7ac34bd71dacda37a1f0d27e7d643eae5a07e1a033d79246732f9198f0e81638eaca0ccec0b8e3e1df7bf935ea118e2bd4fb4702336cac1a275_0", "is_ignored": false, "lines": "resource \"aws_subnet\" \"subnet\" {\n  vpc_id     = \"${aws_vpc.main.id}\"\n  cidr_block = \"${var.subnet_cidr}\"\n  availability_zone = \"${var.region}b\"\n  map_public_ip_on_launch = true\n  tags = {\n    Name = \"tmp_vulnado_rev_shell_subnet\"\n  }\n}", "message": "Resources in the AWS subnet are assigned a public IP address. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application. Set `map_public_ip_on_launch` to false so that resources are not publicly-accessible.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-284: Improper Access Control"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://owasp.org/Top10/A01_2021-Broken_Access_Control/", "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch", "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 50764, "rule_id": "2ZUo79", "rv_id": 834997, "url": "https://semgrep.dev/playground/r/e1TDK3D/terraform.aws.security.aws-subnet-has-public-ip-address.aws-subnet-has-public-ip-address", "version_id": "e1TDK3D"}}, "shortlink": "https://sg.run/XJZw", "source": "https://semgrep.dev/r/terraform.aws.security.aws-subnet-has-public-ip-address.aws-subnet-has-public-ip-address", "subcategory": ["audit"], "technology": ["terraform", "aws"], "vulnerability_class": ["Improper Authorization"]}, "metavars": {"$ANYTHING": {"abstract_content": "subnet", "end": {"col": 30, "line": 33, "offset": 539}, "start": {"col": 24, "line": 33, "offset": 533}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/reverse_shell/main.tf", "start": {"col": 1, "line": 33, "offset": 510}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 26, "line": 55, "offset": 1630}, "extra": {"engine_kind": "PRO", "fingerprint": "a9e6991d7e738be55b89d2cf297bdf06ee91fe130a5e2ce634fe9396226bb95ecbb710d478c7caf47a78b5e9f2a706008cabff0868085c60309dba1653c4356a_0", "is_ignored": false, "lines": "      e.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 850441, "url": "https://semgrep.dev/playground/r/9lTJDWJ/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "9lTJDWJ"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "e", "end": {"col": 8, "line": 55, "offset": 1612}, "start": {"col": 7, "line": 55, "offset": 1611}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/Comment.java", "start": {"col": 7, "line": 55, "offset": 1611}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 26, "line": 70, "offset": 2105}, "extra": {"engine_kind": "PRO", "fingerprint": "a9e6991d7e738be55b89d2cf297bdf06ee91fe130a5e2ce634fe9396226bb95ecbb710d478c7caf47a78b5e9f2a706008cabff0868085c60309dba1653c4356a_1", "is_ignored": false, "lines": "      e.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 850441, "url": "https://semgrep.dev/playground/r/9lTJDWJ/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "9lTJDWJ"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "e", "end": {"col": 8, "line": 70, "offset": 2087}, "start": {"col": 7, "line": 70, "offset": 2086}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/Comment.java", "start": {"col": 7, "line": 70, "offset": 2086}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 20, "line": 11, "offset": 250}, "extra": {"engine_kind": "PRO", "fingerprint": "2e7ce4203ad692cbe6e16bd902ba42c7cd1235db94cd435ae874b511b408d01a60fc5e6e4ac658db7f5c480349d873aabf8a6a4c480c4b144bf414a718628199_0", "is_ignored": false, "lines": "    @RequestMapping(value = \"/cowsay\")", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 834018, "url": "https://semgrep.dev/playground/r/2KT7xx0/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "2KT7xx0"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "cowsay", "end": {"col": 18, "line": 12, "offset": 287}, "start": {"col": 12, "line": 12, "offset": 281}}, "$RETURNTYPE": {"abstract_content": "String", "end": {"col": 11, "line": 12, "offset": 280}, "start": {"col": 5, "line": 12, "offset": 274}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/CowController.java", "start": {"col": 6, "line": 11, "offset": 236}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 26, "line": 24, "offset": 730}, "extra": {"engine_kind": "PRO", "fingerprint": "36909de2ddfd9783f520c5ce22aefbccd274b252b93d9960efe6624900d681a62836d8de30a8cc85772c10f7baba5d8bd48e678c0eea432ae8ba238fe339581f_0", "is_ignored": false, "lines": "      e.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 850441, "url": "https://semgrep.dev/playground/r/9lTJDWJ/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "9lTJDWJ"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "e", "end": {"col": 8, "line": 24, "offset": 712}, "start": {"col": 7, "line": 24, "offset": 711}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/Cowsay.java", "start": {"col": 7, "line": 24, "offset": 711}}, {"check_id": "java.spring.security.tainted-ssrf-spring-add.tainted-ssrf-spring-add", "end": {"col": 37, "line": 16, "offset": 438}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "url", "location": {"end": {"col": 46, "line": 16, "offset": 475}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LinksController.java", "start": {"col": 43, "line": 16, "offset": 472}}}], "taint_sink": ["CliCall", [[{"end": {"col": 31, "line": 17, "offset": 527}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LinksController.java", "start": {"col": 12, "line": 17, "offset": 508}}, "LinkLister.getLinks"], [{"content": "url", "location": {"end": {"col": 49, "line": 14, "offset": 328}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LinkLister.java", "start": {"col": 46, "line": 14, "offset": 325}}}], ["CliLoc", [{"end": {"col": 37, "line": 16, "offset": 438}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LinkLister.java", "start": {"col": 34, "line": 16, "offset": 435}}, "url"]]]], "taint_source": ["CliLoc", [{"end": {"col": 46, "line": 16, "offset": 475}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LinksController.java", "start": {"col": 43, "line": 16, "offset": 472}}, "url"]]}, "engine_kind": ["PRO_REQUIRED", {"interfile_taint": true, "interproc_taint": true, "proprietary_language": false}], "fingerprint": "6ed5c279d9ac80d4e4d5e7c58a4b963deb05915944c5d1dcf3fce8b9c2b56ca58480cf309885254a451255308041b0a962799bd1778b20446d3db2638d1f2670_0", "is_ignored": false, "lines": "    Document doc = Jsoup.connect(url).get();", "message": "Untrusted input might be used to build an HTTP request, which can lead to a Server-side request forgery (SSRF) vulnerability. SSRF allows an attacker to send crafted requests from the server side to other internal or external systems. SSRF can lead to unauthorized access to sensitive data and, in some cases, allow the attacker to control applications or systems that trust the vulnerable service. To prevent this vulnerability, avoid allowing user input to craft the base request. Instead, treat it as part of the path or query parameter and encode it appropriately. When user input is necessary to prepare the HTTP request, perform strict input validation. Additionally, whenever possible, use allowlists to only interact with expected, trusted domains.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-918: Server-Side Request Forgery (SSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "display-name": "Server-Side Request Forgery (SSRF) with Spring", "functional-categories": ["net::sink::http-request::ApacheHttpClient", "net::sink::http-request::Guava", "net::sink::http-request::HttpClient", "net::sink::http-request::Jsoup", "net::sink::http-request::OkHttp", "net::sink::http-request::RestTemplate", "net::sink::http-request::URL", "net::sink::http-request::WebClient", "web::sink::http-request::ApacheHttpClient", "web::sink::http-request::Guava", "web::sink::http-request::HttpClient", "web::sink::http-request::Jsoup", "web::sink::http-request::OkHttp", "web::sink::http-request::RestTemplate", "web::sink::http-request::URL", "web::sink::http-request::WebClient", "web::source::cookie::Spring", "web::source::header::Spring", "web::source::http-body::Spring", "web::source::http-params::Spring", "web::source::url-path-params::Spring"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A10:2021 - Server-Side Request Forgery (SSRF)"], "references": ["https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 43778, "rule_id": "JDU4Yg", "rv_id": 924249, "url": "https://semgrep.dev/playground/r/l4TX0ob/java.spring.security.tainted-ssrf-spring-add.tainted-ssrf-spring-add", "version_id": "l4TX0ob"}}, "shortlink": "https://sg.run/dnYZ", "source": "https://semgrep.dev/r/java.spring.security.tainted-ssrf-spring-add.tainted-ssrf-spring-add", "subcategory": ["vuln"], "supersedes": ["java.servlets.security.tainted-ssrf-deepsemgrep-add.tainted-ssrf-deepsemgrep-add"], "technology": ["Spring", "java"], "vulnerability_class": ["Server-Side Request Forgery (SSRF)"]}, "metavars": {"$JSOUP": {"abstract_content": "Jsoup.connect(url)", "end": {"col": 38, "line": 16, "offset": 439}, "start": {"col": 20, "line": 16, "offset": 421}}, "$MAPPING": {"abstract_content": "RequestMapping", "end": {"col": 18, "line": 15, "offset": 380}, "start": {"col": 4, "line": 15, "offset": 366}}, "$METHOD": {"abstract_content": "links", "end": {"col": 21, "line": 16, "offset": 450}, "start": {"col": 16, "line": 16, "offset": 445}}, "$METHODNAME": {"abstract_content": "links", "end": {"col": 21, "line": 16, "offset": 450}, "start": {"col": 16, "line": 16, "offset": 445}}, "$REQ": {"abstract_content": "RequestParam", "end": {"col": 35, "line": 16, "offset": 464}, "start": {"col": 23, "line": 16, "offset": 452}}, "$RET": {"abstract_content": "List<String>", "end": {"col": 15, "line": 16, "offset": 444}, "start": {"col": 3, "line": 16, "offset": 432}}, "$SOURCE": {"abstract_content": "url", "end": {"col": 46, "line": 16, "offset": 475}, "start": {"col": 43, "line": 16, "offset": 472}}, "$TYPE": {"abstract_content": "String", "end": {"col": 42, "line": 16, "offset": 471}, "start": {"col": 36, "line": 16, "offset": 465}}, "$URI": {"abstract_content": "url", "end": {"col": 37, "line": 16, "offset": 438}, "start": {"col": 34, "line": 16, "offset": 435}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LinkLister.java", "start": {"col": 34, "line": 16, "offset": 435}}, {"check_id": "java.spring.security.injection.tainted-url-host.tainted-url-host", "end": {"col": 29, "line": 26, "offset": 697}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "url", "location": {"end": {"col": 48, "line": 20, "offset": 655}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LinksController.java", "start": {"col": 45, "line": 20, "offset": 652}}}], "taint_sink": ["CliCall", [[{"end": {"col": 33, "line": 21, "offset": 708}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LinksController.java", "start": {"col": 12, "line": 21, "offset": 687}}, "LinkLister.getLinksV2"], [{"content": "url", "location": {"end": {"col": 51, "line": 24, "offset": 637}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LinkLister.java", "start": {"col": 48, "line": 24, "offset": 634}}}], ["CliLoc", [{"end": {"col": 29, "line": 26, "offset": 697}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LinkLister.java", "start": {"col": 17, "line": 26, "offset": 685}}, "new URL(url)"]]]], "taint_source": ["CliLoc", [{"end": {"col": 48, "line": 20, "offset": 655}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LinksController.java", "start": {"col": 45, "line": 20, "offset": 652}}, "url"]]}, "engine_kind": ["PRO_REQUIRED", {"interfile_taint": true, "interproc_taint": true, "proprietary_language": false}], "fingerprint": "c38645a37de07598406e2710a75cdd0689d2121a7b601ada5efff70fdfc2e191654942527260f3d7b62c0c471eeed92c2eb8af39ef41b762e7a1d99c195e22c2_0", "is_ignored": false, "lines": "      URL aUrl= new URL(url);", "message": "User data flows into the host portion of this manually-constructed URL. This could allow an attacker to send data to their own server, potentially exposing sensitive data such as cookies or authorization information sent with this request. They could also probe internal servers or other resources that the server running this code can access. (This is called server-side request forgery, or SSRF.) Do not allow arbitrary hosts. Instead, create an allowlist for approved hosts, hardcode the correct host, or ensure that the user data can only affect the path or parameters.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-918: Server-Side Request Forgery (SSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A10:2021 - Server-Side Request Forgery (SSRF)"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/Server_Side_Request_Forgery_Prevention_Cheat_Sheet.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 22077, "rule_id": "oqUZo8", "rv_id": 834017, "url": "https://semgrep.dev/playground/r/pZTXjjr/java.spring.security.injection.tainted-url-host.tainted-url-host", "version_id": "pZTXjjr"}}, "shortlink": "https://sg.run/vkYn", "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-url-host.tainted-url-host", "subcategory": ["vuln"], "technology": ["java", "spring"], "vulnerability_class": ["Server-Side Request Forgery (SSRF)"]}, "metavars": {"$1": {"abstract_content": "RequestParam", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHODNAME": {"abstract_content": "linksV2", "end": {"col": 23, "line": 20, "offset": 630}, "start": {"col": 16, "line": 20, "offset": 623}}, "$ONEARG": {"abstract_content": "url", "end": {"col": 28, "line": 26, "offset": 696}, "start": {"col": 25, "line": 26, "offset": 693}}, "$REQ": {"abstract_content": "RequestParam", "end": {"col": 37, "line": 20, "offset": 644}, "start": {"col": 25, "line": 20, "offset": 632}}, "$SOURCE": {"abstract_content": "url", "end": {"col": 48, "line": 20, "offset": 655}, "start": {"col": 45, "line": 20, "offset": 652}}, "$TYPE": {"abstract_content": "String", "end": {"col": 44, "line": 20, "offset": 651}, "start": {"col": 38, "line": 20, "offset": 645}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LinkLister.java", "start": {"col": 17, "line": 26, "offset": 685}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 15, "offset": 380}, "extra": {"engine_kind": "PRO", "fingerprint": "a779d36aa02308a543025c33d9dd3f741659fc620cc7fdec82c08fb0841f26ebf7df305cae667d20955cc67741a743a3fc1c1999d8c2bf98331273e78f80c5c8_0", "is_ignored": false, "lines": "  @RequestMapping(value = \"/links\", produces = \"application/json\")", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 834018, "url": "https://semgrep.dev/playground/r/2KT7xx0/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "2KT7xx0"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "links", "end": {"col": 21, "line": 16, "offset": 450}, "start": {"col": 16, "line": 16, "offset": 445}}, "$RETURNTYPE": {"abstract_content": "List<String>", "end": {"col": 15, "line": 16, "offset": 444}, "start": {"col": 3, "line": 16, "offset": 432}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LinksController.java", "start": {"col": 4, "line": 15, "offset": 366}}, {"check_id": "java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "end": {"col": 18, "line": 19, "offset": 555}, "extra": {"engine_kind": "PRO", "fingerprint": "c9916baa0088ad9198f8e1e65f2ec68ca6c79062af223dca29e4ba911908147079d9f14a734d04e50b7b4f7782156aa7726b503e2e88d5f7c0d24bd30e551a96_0", "is_ignored": false, "lines": "  @RequestMapping(value = \"/links-v2\", produces = \"application/json\")", "message": "Detected a method annotated with 'RequestMapping' that does not specify the HTTP method. CSRF protections are not enabled for GET, HEAD, TRACE, or OPTIONS, and by default all HTTP methods are allowed when the HTTP method is not explicitly specified. This means that a method that performs state changes could be vulnerable to CSRF attacks. To mitigate, add the 'method' field and specify the HTTP method (such as 'RequestMethod.POST').", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-352: Cross-Site Request Forgery (CSRF)"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2021 - Broken Access Control"], "references": ["https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9219, "rule_id": "wdUJ7q", "rv_id": 834018, "url": "https://semgrep.dev/playground/r/2KT7xx0/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "version_id": "2KT7xx0"}}, "shortlink": "https://sg.run/2xlq", "source": "https://semgrep.dev/r/java.spring.security.unrestricted-request-mapping.unrestricted-request-mapping", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING", "subcategory": ["audit"], "technology": ["spring"], "vulnerability_class": ["Cross-Site Request Forgery (CSRF)"]}, "metavars": {"$METHOD": {"abstract_content": "linksV2", "end": {"col": 23, "line": 20, "offset": 630}, "start": {"col": 16, "line": 20, "offset": 623}}, "$RETURNTYPE": {"abstract_content": "List<String>", "end": {"col": 15, "line": 20, "offset": 622}, "start": {"col": 3, "line": 20, "offset": 610}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LinksController.java", "start": {"col": 4, "line": 19, "offset": 541}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 32, "line": 25, "offset": 863}, "extra": {"engine_kind": "PRO", "fingerprint": "d391e61b7bf828d8aacf4ee0b6d987c0cbc0b89b534abd3044d0930f4cb8c3f8259ce9cea6419567efa1e744b6124bd4622fb6640e4b7b784a3e674e326dc45a_0", "is_ignored": false, "lines": "            e.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 850441, "url": "https://semgrep.dev/playground/r/9lTJDWJ/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "9lTJDWJ"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "e", "end": {"col": 14, "line": 25, "offset": 845}, "start": {"col": 13, "line": 25, "offset": 844}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/Postgres.java", "start": {"col": 13, "line": 25, "offset": 844}}, {"check_id": "java.lang.security.audit.crypto.use-of-md5.use-of-md5", "end": {"col": 63, "line": 67, "offset": 2546}, "extra": {"engine_kind": "PRO", "fingerprint": "2c1915b0afd333608140efc2711f0f5adba6d85b79533866107f17b80cf9d53b4b84a66fcd337c39b28232ef364ea08fe6a12eb58c7b91bddfe98ab76b0c3783_0", "fix": "\"SHA-512\"", "is_ignored": false, "lines": "            MessageDigest md = MessageDigest.getInstance(\"MD5\");", "message": "Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use HMAC instead.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-328: Use of Weak Hash"], "functional-categories": ["crypto::search::hash-algorithm::java.security"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://owasp.org/Top10/A02_2021-Cryptographic_Failures"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 17325, "rule_id": "KxU5lW", "rv_id": 833941, "url": "https://semgrep.dev/playground/r/3ZT3A03/java.lang.security.audit.crypto.use-of-md5.use-of-md5", "version_id": "3ZT3A03"}}, "shortlink": "https://sg.run/ryJn", "source": "https://semgrep.dev/r/java.lang.security.audit.crypto.use-of-md5.use-of-md5", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#WEAK_MESSAGE_DIGEST_MD5", "subcategory": ["vuln"], "technology": ["java"], "vulnerability_class": ["Insecure Hashing Algorithm"]}, "metavars": {"$1": {"abstract_content": "\"MD5\"", "end": {"col": 6, "line": 1, "offset": 5}, "start": {"col": 1, "line": 1, "offset": 0}}, "$ALGO": {"abstract_content": "\"MD5\"", "end": {"col": 63, "line": 67, "offset": 2546}, "start": {"col": 58, "line": 67, "offset": 2541}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/Postgres.java", "start": {"col": 58, "line": 67, "offset": 2541}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 29, "line": 100, "offset": 3833}, "extra": {"engine_kind": "PRO", "fingerprint": "d391e61b7bf828d8aacf4ee0b6d987c0cbc0b89b534abd3044d0930f4cb8c3f8259ce9cea6419567efa1e744b6124bd4622fb6640e4b7b784a3e674e326dc45a_1", "is_ignored": false, "lines": "         e.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 850441, "url": "https://semgrep.dev/playground/r/9lTJDWJ/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "9lTJDWJ"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "e", "end": {"col": 11, "line": 100, "offset": 3815}, "start": {"col": 10, "line": 100, "offset": 3814}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/Postgres.java", "start": {"col": 10, "line": 100, "offset": 3814}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 32, "line": 114, "offset": 4414}, "extra": {"engine_kind": "PRO", "fingerprint": "d391e61b7bf828d8aacf4ee0b6d987c0cbc0b89b534abd3044d0930f4cb8c3f8259ce9cea6419567efa1e744b6124bd4622fb6640e4b7b784a3e674e326dc45a_2", "is_ignored": false, "lines": "            e.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 850441, "url": "https://semgrep.dev/playground/r/9lTJDWJ/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "9lTJDWJ"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "e", "end": {"col": 14, "line": 114, "offset": 4396}, "start": {"col": 13, "line": 114, "offset": 4395}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/Postgres.java", "start": {"col": 13, "line": 114, "offset": 4395}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 26, "line": 34, "offset": 986}, "extra": {"engine_kind": "PRO", "fingerprint": "685953ab176a4e25b23955b36d7df23addfe0ae15b01ca757029745ffc7b0000220f22681d33e805515a774d3908c9075f07e1ee0d752b662adce665137d1956_0", "is_ignored": false, "lines": "      e.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 850441, "url": "https://semgrep.dev/playground/r/9lTJDWJ/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "9lTJDWJ"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "e", "end": {"col": 8, "line": 34, "offset": 968}, "start": {"col": 7, "line": 34, "offset": 967}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 7, "line": 34, "offset": 967}}, {"check_id": "java.spring.security.injection.tainted-sql-string.tainted-sql-string", "end": {"col": 81, "line": 47, "offset": 1365}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "input", "location": {"end": {"col": 54, "line": 19, "offset": 669}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LoginController.java", "start": {"col": 49, "line": 19, "offset": 664}}}], "taint_sink": ["CliCall", [[{"end": {"col": 27, "line": 20, "offset": 699}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LoginController.java", "start": {"col": 17, "line": 20, "offset": 689}}, "User.fetch"], [{"content": "un", "location": {"end": {"col": 37, "line": 39, "offset": 1081}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 35, "line": 39, "offset": 1079}}}], ["CliLoc", [{"end": {"col": 81, "line": 47, "offset": 1365}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 22, "line": 47, "offset": 1306}}, "\"select * from users where username = '\" + un + \"' limit 1\""]]]], "taint_source": ["CliLoc", [{"end": {"col": 54, "line": 19, "offset": 669}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LoginController.java", "start": {"col": 49, "line": 19, "offset": 664}}, "input"]]}, "engine_kind": ["PRO_REQUIRED", {"interfile_taint": true, "interproc_taint": true, "proprietary_language": false}], "fingerprint": "95aee8315809ace81b324591376e3e9512baa767d83b1374c5748461d9f479b4896f839b395f3704707d72ce43202cb8d5f6ecc7d5d5c3fb0b5ddb34181db5d7_0", "is_ignored": false, "lines": "      String query = \"select * from users where username = '\" + un + \"' limit 1\";", "message": "User data flows into this manually-constructed SQL string. User data can be safely inserted into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-constructed SQL strings is a possible indicator of SQL injection, which could let an attacker steal or manipulate data from the database. Instead, use prepared statements (`connection.PreparedStatement`) or a safe library.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "interfile": true, "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://docs.oracle.com/javase/7/docs/api/java/sql/PreparedStatement.html"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 14767, "rule_id": "10UdRR", "rv_id": 834015, "url": "https://semgrep.dev/playground/r/o5TBEE0/java.spring.security.injection.tainted-sql-string.tainted-sql-string", "version_id": "o5TBEE0"}}, "shortlink": "https://sg.run/9rzz", "source": "https://semgrep.dev/r/java.spring.security.injection.tainted-sql-string.tainted-sql-string", "subcategory": ["vuln"], "technology": ["spring"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "select", "end": {"col": 7, "line": 1, "offset": 6}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHODNAME": {"abstract_content": "login", "end": {"col": 22, "line": 19, "offset": 637}, "start": {"col": 17, "line": 19, "offset": 632}}, "$REQ": {"abstract_content": "RequestBody", "end": {"col": 35, "line": 19, "offset": 650}, "start": {"col": 24, "line": 19, "offset": 639}}, "$SOURCE": {"abstract_content": "input", "end": {"col": 54, "line": 19, "offset": 669}, "start": {"col": 49, "line": 19, "offset": 664}}, "$SQLSTR": {"abstract_content": "select * from users where username = '", "end": {"col": 61, "line": 47, "offset": 1345}, "start": {"col": 23, "line": 47, "offset": 1307}}, "$TYPE": {"abstract_content": "LoginRequest", "end": {"col": 48, "line": 19, "offset": 663}, "start": {"col": 36, "line": 19, "offset": 651}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 22, "line": 47, "offset": 1306}}, {"check_id": "java.lang.security.audit.formatted-sql-string-deepsemgrep.formatted-sql-string-deepsemgrep", "end": {"col": 46, "line": 49, "offset": 1445}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "input", "location": {"end": {"col": 54, "line": 19, "offset": 669}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LoginController.java", "start": {"col": 49, "line": 19, "offset": 664}}}], "taint_sink": ["CliCall", [[{"end": {"col": 27, "line": 20, "offset": 699}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LoginController.java", "start": {"col": 17, "line": 20, "offset": 689}}, "User.fetch"], [{"content": "un", "location": {"end": {"col": 37, "line": 39, "offset": 1081}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 35, "line": 39, "offset": 1079}}}, {"content": "query", "location": {"end": {"col": 19, "line": 47, "offset": 1303}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 14, "line": 47, "offset": 1298}}}], ["CliLoc", [{"end": {"col": 46, "line": 49, "offset": 1445}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 22, "line": 49, "offset": 1421}}, "stmt.executeQuery(query)"]]]], "taint_source": ["CliLoc", [{"end": {"col": 54, "line": 19, "offset": 669}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LoginController.java", "start": {"col": 49, "line": 19, "offset": 664}}, "input"]]}, "engine_kind": ["PRO_REQUIRED", {"interfile_taint": true, "interproc_taint": true, "proprietary_language": false}], "fingerprint": "424ec528359cce3f9a642f02be9557a703752e79b1cb33c89f745f15c6912bcba0a29ddcd6794aaf38782f158c7b252ff83c9776fc44e9f52ebd17d6e3737341_0", "is_ignored": false, "lines": "      ResultSet rs = stmt.executeQuery(query);", "message": "Untrusted input might be used to build a database query, which can lead to a SQL injection vulnerability. An attacker can execute malicious SQL statements and gain unauthorized access to sensitive data, modify, delete data, or execute arbitrary system commands. To prevent this vulnerability, use prepared statements that do not concatenate user-controllable strings and use parameterized queries where SQL commands and user data are strictly separated. Also, consider using an object-relational (ORM) framework to operate with safer abstractions. To build SQL queries safely in Java, it is possible to adopt prepared statements by using the `java.sql.PreparedStatement` class with bind variables.", "metadata": {"asvs": {"control_id": "5.3.5 Injection", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "functional-categories": ["web::source::cookie::Servlet", "web::source::http-params::Servlet", "web::source::http-body::Servlet", "web::source::header::Servlet", "web::source::url-path-params::Servlet", "web::source::cookie::Spring", "web::source::http-params::Spring", "web::source::http-body::Spring", "web::source::header::Spring", "web::source::url-path-params::Spring", "db::sink::sql-or-nosql-query::JPA", "db::sink::sql-or-nosql-query::java.sql"], "impact": "HIGH", "interfile": true, "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "MEDIUM", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps", "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 40129, "rule_id": "v8U3yY", "rv_id": 850442, "url": "https://semgrep.dev/playground/r/yeTNw2D/java.lang.security.audit.formatted-sql-string-deepsemgrep.formatted-sql-string-deepsemgrep", "version_id": "yeTNw2D"}}, "shortlink": "https://sg.run/w5kd", "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string-deepsemgrep.formatted-sql-string-deepsemgrep", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "RequestBody", "end": {"col": 12, "line": 1, "offset": 11}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHODNAME": {"abstract_content": "login", "end": {"col": 22, "line": 19, "offset": 637}, "start": {"col": 17, "line": 19, "offset": 632}}, "$REQ": {"abstract_content": "RequestBody", "end": {"col": 35, "line": 19, "offset": 650}, "start": {"col": 24, "line": 19, "offset": 639}}, "$S": {"abstract_content": "stmt", "end": {"col": 26, "line": 49, "offset": 1425}, "propagated_value": {"svalue_abstract_content": "cxn.createStatement()", "svalue_end": {"col": 35, "line": 44, "offset": 1224}, "svalue_start": {"col": 14, "line": 44, "offset": 1203}}, "start": {"col": 22, "line": 49, "offset": 1421}}, "$SOURCE": {"abstract_content": "input", "end": {"col": 54, "line": 19, "offset": 669}, "start": {"col": 49, "line": 19, "offset": 664}}, "$SQLFUNC": {"abstract_content": "executeQuery", "end": {"col": 39, "line": 49, "offset": 1438}, "start": {"col": 27, "line": 49, "offset": 1426}}, "$TYPE": {"abstract_content": "LoginRequest", "end": {"col": 48, "line": 19, "offset": 663}, "start": {"col": 36, "line": 19, "offset": 651}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 22, "line": 49, "offset": 1421}}, {"check_id": "java.lang.security.audit.formatted-sql-string.formatted-sql-string", "end": {"col": 46, "line": 49, "offset": 1445}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "query", "location": {"end": {"col": 19, "line": 47, "offset": 1303}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 14, "line": 47, "offset": 1298}}}], "taint_sink": ["CliLoc", [{"end": {"col": 46, "line": 49, "offset": 1445}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 22, "line": 49, "offset": 1421}}, "stmt.executeQuery(query)"]], "taint_source": ["CliLoc", [{"end": {"col": 67, "line": 47, "offset": 1351}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 65, "line": 47, "offset": 1349}}, "un"]]}, "engine_kind": "PRO", "fingerprint": "03bd2f1ce1667d358930795b1ece34bea35ba8ea7366ec09143871efc7574334239ba23e2ca2538a2dc054e46568f64c089b2fd6c993915549e247c50f77d701_0", "is_ignored": false, "lines": "      ResultSet rs = stmt.executeQuery(query);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"asvs": {"control_id": "5.3.5 Injection", "control_url": "https://github.com/OWASP/ASVS/blob/master/4.0/en/0x13-V5-Validation-Sanitization-Encoding.md#v53-output-encoding-and-injection-prevention-requirements", "section": "V5: Validation, Sanitization and Encoding Verification Requirements", "version": "4"}, "category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", "https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html#create_ps", "https://software-security.sans.org/developer-how-to/fix-sql-injection-in-java-using-prepared-callable-statement"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9175, "rule_id": "QrUzxR", "rv_id": 833949, "url": "https://semgrep.dev/playground/r/BjTe03J/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "version_id": "BjTe03J"}}, "shortlink": "https://sg.run/OPXp", "source": "https://semgrep.dev/r/java.lang.security.audit.formatted-sql-string.formatted-sql-string", "source-rule-url": "https://find-sec-bugs.github.io/bugs.htm#SQL_INJECTION", "subcategory": ["vuln"], "technology": ["java"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$ANNOT": {"abstract_content": "User", "end": {"col": 21, "line": 39, "offset": 1065}, "start": {"col": 17, "line": 39, "offset": 1061}}, "$FUNC": {"abstract_content": "fetch", "end": {"col": 27, "line": 39, "offset": 1071}, "start": {"col": 22, "line": 39, "offset": 1066}}, "$S": {"abstract_content": "stmt", "end": {"col": 26, "line": 49, "offset": 1425}, "propagated_value": {"svalue_abstract_content": "cxn.createStatement()", "svalue_end": {"col": 35, "line": 44, "offset": 1224}, "svalue_start": {"col": 14, "line": 44, "offset": 1203}}, "start": {"col": 22, "line": 49, "offset": 1421}}, "$SQLFUNC": {"abstract_content": "executeQuery", "end": {"col": 39, "line": 49, "offset": 1438}, "start": {"col": 27, "line": 49, "offset": 1426}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 22, "line": 49, "offset": 1421}}, {"check_id": "java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "end": {"col": 46, "line": 49, "offset": 1445}, "extra": {"engine_kind": "PRO", "fingerprint": "e39d564416a882673f5dc9d23f8121a1cd4fb83ed163e3d7e39be81163ebecee36b1ccbaa1e66e2ea8ec9d87c9c0dd82bdced2ad49ede213cc6b40f54e408682_0", "is_ignored": false, "lines": "      ResultSet rs = stmt.executeQuery(query);", "message": "Detected a formatted string in a SQL statement. This could lead to SQL injection if variables in the SQL statement are not properly sanitized. Use a prepared statements (java.sql.PreparedStatement) instead. You can obtain a PreparedStatement using 'connection.prepareStatement'.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "HIGH", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "community", "r_id": 9206, "rule_id": "oqUe8K", "rv_id": 833963, "url": "https://semgrep.dev/playground/r/DkTG0rE/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "version_id": "DkTG0rE"}}, "shortlink": "https://sg.run/AvkL", "source": "https://semgrep.dev/r/java.lang.security.audit.sqli.jdbc-sqli.jdbc-sqli", "subcategory": ["audit"], "technology": ["jdbc"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "executeQuery", "end": {"col": 13, "line": 1, "offset": 12}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "executeQuery", "end": {"col": 39, "line": 49, "offset": 1438}, "start": {"col": 27, "line": 49, "offset": 1426}}, "$S": {"abstract_content": "stmt", "end": {"col": 26, "line": 49, "offset": 1425}, "propagated_value": {"svalue_abstract_content": "cxn.createStatement()", "svalue_end": {"col": 35, "line": 44, "offset": 1224}, "svalue_start": {"col": 14, "line": 44, "offset": 1203}}, "start": {"col": 22, "line": 49, "offset": 1421}}, "$SQL": {"abstract_content": "query", "end": {"col": 45, "line": 49, "offset": 1444}, "propagated_value": {"svalue_abstract_content": "\"select * from users where username = '\"+un+\"' limit 1\"", "svalue_end": {"col": 81, "line": 47, "offset": 1365}, "svalue_start": {"col": 22, "line": 47, "offset": 1306}}, "start": {"col": 40, "line": 49, "offset": 1439}}, "$X": {"abstract_content": "\"select * from users where username = '\"+un", "end": {"col": 67, "line": 47, "offset": 1351}, "start": {"col": 22, "line": 47, "offset": 1306}}, "$Y": {"abstract_content": "\"' limit 1\"", "end": {"col": 81, "line": 47, "offset": 1365}, "start": {"col": 70, "line": 47, "offset": 1354}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 22, "line": 49, "offset": 1421}}, {"check_id": "java.spring.security.java-sql-sqli.java-sql-sqli", "end": {"col": 45, "line": 49, "offset": 1444}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "input", "location": {"end": {"col": 54, "line": 19, "offset": 669}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LoginController.java", "start": {"col": 49, "line": 19, "offset": 664}}}], "taint_sink": ["CliCall", [[{"end": {"col": 27, "line": 20, "offset": 699}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LoginController.java", "start": {"col": 17, "line": 20, "offset": 689}}, "User.fetch"], [{"content": "un", "location": {"end": {"col": 37, "line": 39, "offset": 1081}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 35, "line": 39, "offset": 1079}}}, {"content": "query", "location": {"end": {"col": 19, "line": 47, "offset": 1303}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 14, "line": 47, "offset": 1298}}}], ["CliLoc", [{"end": {"col": 45, "line": 49, "offset": 1444}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 40, "line": 49, "offset": 1439}}, "query"]]]], "taint_source": ["CliLoc", [{"end": {"col": 54, "line": 19, "offset": 669}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/LoginController.java", "start": {"col": 49, "line": 19, "offset": 664}}, "input"]]}, "engine_kind": ["PRO_REQUIRED", {"interfile_taint": true, "interproc_taint": true, "proprietary_language": false}], "fingerprint": "5b0d18fcbb5b69332a6eba6310436a08b8bbb0e475934a795e78a6636ad3af9c399a2d52c1780ea67b140f89148f1895edd212fb6308ad82bea95a672d412161_0", "is_ignored": false, "lines": "      ResultSet rs = stmt.executeQuery(query);", "message": "Untrusted input might be used to build a database query, which can lead to a SQL injection vulnerability. An attacker can execute malicious SQL statements and gain unauthorized access to sensitive data, modify, delete data, or execute arbitrary system commands. To prevent this vulnerability, use prepared statements that do not concatenate user-controllable strings and use parameterized queries where SQL commands and user data are strictly separated. Also, consider using an object-relational (ORM) framework to operate with safer abstractions. To build SQL queries safely in Java, it is possible to adopt prepared statements by using the `java.sql.PreparedStatement` class with bind variables.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"], "cwe2020-top25": true, "cwe2021-top25": true, "cwe2022-top25": true, "display-name": "SQL Injection with Spring", "functional-categories": ["db::sink::sql-or-nosql-query::java.sql", "web::source::cookie::Spring", "web::source::header::Spring", "web::source::http-body::Spring", "web::source::http-params::Spring", "web::source::url-path-params::Spring"], "impact": "HIGH", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "HIGH", "owasp": ["A01:2017 - Injection", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 141400, "rule_id": "PeUJvJ9", "rv_id": 924239, "url": "https://semgrep.dev/playground/r/5PTNzr3/java.spring.security.java-sql-sqli.java-sql-sqli", "version_id": "5PTNzr3"}}, "shortlink": "https://sg.run/4b3b5", "source": "https://semgrep.dev/r/java.spring.security.java-sql-sqli.java-sql-sqli", "subcategory": ["vuln"], "technology": ["Spring", "java"], "vulnerability_class": ["SQL Injection"]}, "metavars": {"$1": {"abstract_content": "RequestBody", "end": {"col": 12, "line": 1, "offset": 11}, "start": {"col": 1, "line": 1, "offset": 0}}, "$METHOD": {"abstract_content": "login", "end": {"col": 22, "line": 19, "offset": 637}, "start": {"col": 17, "line": 19, "offset": 632}}, "$REQ": {"abstract_content": "RequestBody", "end": {"col": 35, "line": 19, "offset": 650}, "start": {"col": 24, "line": 19, "offset": 639}}, "$RET": {"abstract_content": "LoginResponse", "end": {"col": 16, "line": 19, "offset": 631}, "start": {"col": 3, "line": 19, "offset": 618}}, "$SOURCE": {"abstract_content": "input", "end": {"col": 54, "line": 19, "offset": 669}, "start": {"col": 49, "line": 19, "offset": 664}}, "$SQL": {"abstract_content": "query", "end": {"col": 45, "line": 49, "offset": 1444}, "propagated_value": {"svalue_abstract_content": "\"select * from users where username = '\"+un+\"' limit 1\"", "svalue_end": {"col": 81, "line": 47, "offset": 1365}, "svalue_start": {"col": 22, "line": 47, "offset": 1306}}, "start": {"col": 40, "line": 49, "offset": 1439}}, "$STMT": {"abstract_content": "stmt", "end": {"col": 26, "line": 49, "offset": 1425}, "propagated_value": {"svalue_abstract_content": "cxn.createStatement()", "svalue_end": {"col": 35, "line": 44, "offset": 1224}, "svalue_start": {"col": 14, "line": 44, "offset": 1203}}, "start": {"col": 22, "line": 49, "offset": 1421}}, "$TYPE": {"abstract_content": "LoginRequest", "end": {"col": 48, "line": 19, "offset": 663}, "start": {"col": 36, "line": 19, "offset": 651}}}, "severity": "ERROR", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 40, "line": 49, "offset": 1439}}, {"check_id": "java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "end": {"col": 26, "line": 58, "offset": 1758}, "extra": {"engine_kind": "PRO", "fingerprint": "685953ab176a4e25b23955b36d7df23addfe0ae15b01ca757029745ffc7b0000220f22681d33e805515a774d3908c9075f07e1ee0d752b662adce665137d1956_1", "is_ignored": false, "lines": "      e.printStackTrace();", "message": "Possible active debug code detected. Deploying an application with debug code can create unintended entry points or expose sensitive information.", "metadata": {"category": "security", "confidence": "MEDIUM", "cwe": ["CWE-489: Active Debug Code"], "functional-categories": ["debug::search::active-debug-code::java.lang"], "impact": "LOW", "license": "Copyright 2023 Semgrep, Inc.", "likelihood": "LOW", "owasp": ["A10:2004 - Insecure Configuration Management", "A06:2017 - Security Misconfiguration", "A05:2021 - Security Misconfiguration"], "references": ["https://cwe.mitre.org/data/definitions/489.html", "https://www.acunetix.com/vulnerabilities/web/stack-trace-disclosure-java/", "https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/02-Testing_for_Stack_Traces", "https://www.securecodewarrior.com/blog/coders-conquer-security-share-learn-series-information-exposure"], "semgrep.dev": {"rule": {"origin": "pro_rules", "r_id": 27144, "rule_id": "v8U0rZ", "rv_id": 850441, "url": "https://semgrep.dev/playground/r/9lTJDWJ/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "version_id": "9lTJDWJ"}}, "shortlink": "https://sg.run/4K8z", "source": "https://semgrep.dev/r/java.lang.security.audit.active-debug-code-printstacktrace.active-debug-code-printstacktrace", "subcategory": ["audit"], "technology": ["java"], "vulnerability_class": ["Active Debug Code"]}, "metavars": {"$EXCEPTION": {"abstract_content": "e", "end": {"col": 8, "line": 58, "offset": 1740}, "start": {"col": 7, "line": 58, "offset": 1739}}}, "severity": "WARNING", "validation_state": "NO_VALIDATOR"}, "path": "../../vulnado/src/main/java/com/scalesec/vulnado/User.java", "start": {"col": 7, "line": 58, "offset": 1739}}], "skipped_rules": [], "version": "1.91.0"}